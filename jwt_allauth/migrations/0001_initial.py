# Generated by Django 5.1.1 on 2025-03-30 17:55

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='JAUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.PositiveSmallIntegerField(default=0)),
                ('groups', models.ManyToManyField(blank=True, related_name='custom_users', related_query_name='custom_user', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='custom_users', related_query_name='custom_user', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='GenericTokenModel',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='ip')),
                ('is_mobile', models.BooleanField(null=True, verbose_name='is mobile')),
                ('is_tablet', models.BooleanField(null=True, verbose_name='is tablet')),
                ('is_pc', models.BooleanField(null=True, verbose_name='is pc')),
                ('is_bot', models.BooleanField(null=True, verbose_name='is bot')),
                ('browser', models.CharField(blank=True, max_length=32, null=True, verbose_name='browser')),
                ('browser_version', models.CharField(blank=True, max_length=32, null=True, verbose_name='browser version')),
                ('os', models.CharField(blank=True, max_length=32, null=True, verbose_name='os')),
                ('os_version', models.CharField(blank=True, max_length=32, null=True, verbose_name='os version')),
                ('device', models.CharField(blank=True, max_length=32, null=True, verbose_name='device')),
                ('device_brand', models.CharField(blank=True, max_length=32, null=True, verbose_name='device brand')),
                ('device_model', models.CharField(blank=True, max_length=32, null=True, verbose_name='device model')),
                ('token', models.CharField(max_length=255, verbose_name='token')),
                ('purpose', models.CharField(max_length=32, verbose_name='purpose')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='generic_tokens', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'refresh token',
                'verbose_name_plural': 'refresh tokens',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RefreshTokenWhitelistModel',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='ip')),
                ('is_mobile', models.BooleanField(null=True, verbose_name='is mobile')),
                ('is_tablet', models.BooleanField(null=True, verbose_name='is tablet')),
                ('is_pc', models.BooleanField(null=True, verbose_name='is pc')),
                ('is_bot', models.BooleanField(null=True, verbose_name='is bot')),
                ('browser', models.CharField(blank=True, max_length=32, null=True, verbose_name='browser')),
                ('browser_version', models.CharField(blank=True, max_length=32, null=True, verbose_name='browser version')),
                ('os', models.CharField(blank=True, max_length=32, null=True, verbose_name='os')),
                ('os_version', models.CharField(blank=True, max_length=32, null=True, verbose_name='os version')),
                ('device', models.CharField(blank=True, max_length=32, null=True, verbose_name='device')),
                ('device_brand', models.CharField(blank=True, max_length=32, null=True, verbose_name='device brand')),
                ('device_model', models.CharField(blank=True, max_length=32, null=True, verbose_name='device model')),
                ('jti', models.CharField(max_length=32, verbose_name='jti')),
                ('enabled', models.BooleanField(default=True, verbose_name='enabled')),
                ('session', models.CharField(max_length=32, verbose_name='session')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='refresh_tokens_whitelist', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'refresh token',
                'verbose_name_plural': 'refresh tokens',
                'abstract': False,
            },
        ),
    ]
